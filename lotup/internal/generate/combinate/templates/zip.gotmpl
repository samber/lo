{{- define "decls-types" }}{{ $N := .N -}}
[
	{{ range $i := .N }}{{ if ne $i 0 }}, {{ end }}T{{ add $i 1 }}{{ end }} any,
	{{ range $i := .N }}{{ if ne $i 0 }}, {{ end }}S{{ add $i 1 }} ~[]T{{ add $i 1 }}{{ end }},
]
{{- end }}
{{- define "decls-args" }}{{ $N := .N -}}
({{ range $i := .N }}{{ if ne $i 0 }}, {{ end }}s{{ add $i 1 }} S{{ add $i 1 }}{{ end }})
{{- end }}
{{- define "decls-tuple" }}{{ $N := .N -}}
Tuple{{ .N }}[{{ range $i := .N }}{{ if ne $i 0 }}, {{ end }}T{{ add $i 1 }}{{ end }}]
{{- end }}
func Zip{{ .N }}{{ template "decls-types" . }}{{ template "decls-args" . }} []{{ template "decls-tuple" . }} {
	size := min(
		{{- range $i := .N }}{{ if ne $i 0 }}, {{ end }}len(s{{ add $i 1 }}){{ end -}}
	)
	res := make([]{{ template "decls-tuple" . }}, size)
	for i := range size {
		res[i] = Of{{ .N }}(
			{{- range $i := .N }}{{ if ne $i 0 }}, {{ end }}s{{ add $i 1 }}[i]{{ end -}}
		)
	}

	return res
}
