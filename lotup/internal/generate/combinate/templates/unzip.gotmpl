{{- define "decls-tuple" }}{{ $N := .N -}}
Tuple{{ .N }}[{{ range $i := .N }}{{ if ne $i 0 }}, {{ end }}T{{ add $i 1 }}{{ end }}]
{{- end }}
{{- define "decls-types" }}{{ $N := .N -}}
[
	{{ range $i := .N }}{{ if ne $i 0 }}, {{ end }}T{{ add $i 1 }}{{ end }} any,
	Slice ~[]{{ template "decls-tuple" . }},
]
{{- end }}
{{- define "decls-results" }}{{ $N := .N -}}
({{ range $i := .N }}{{ if ne $i 0 }}, {{ end }}[]T{{ add $i 1 }}{{ end }})
{{- end }}
func Unzip{{ .N }}{{ template "decls-types" . }}(ts Slice) {{ template "decls-results" . }} {
	size := len(ts)
{{ range $i := .N }}
	s{{ add $i 1 }} := make([]T{{ add $i 1 }}, size)
{{- end }}
	for i, t := range ts {
		{{ range $i := .N }}{{ if ne $i 0 }}, {{ end }}s{{ add $i 1 }}[i]
		{{- end }} = t.Unpack()
	}

	return {{ range $i := .N }}{{ if ne $i 0 }}, {{ end }}s{{ add $i 1 }}{{ end }}
}
