// Code generated by generate_tuples.go; DO NOT EDIT.
package lotup

//go:generate go run internal/generate/tuples/generate_tuples.go

type Tuple2[T1, T2 any] struct {
	V1 T1
	V2 T2
}

func (t Tuple2[T1, T2]) Unpack() (T1, T2) {
	return t.V1, t.V2
}

type Tuple3[T1, T2, T3 any] struct {
	V1 T1
	V2 T2
	V3 T3
}

func (t Tuple3[T1, T2, T3]) Unpack() (T1, T2, T3) {
	return t.V1, t.V2, t.V3
}

type Tuple4[T1, T2, T3, T4 any] struct {
	V1 T1
	V2 T2
	V3 T3
	V4 T4
}

func (t Tuple4[T1, T2, T3, T4]) Unpack() (T1, T2, T3, T4) {
	return t.V1, t.V2, t.V3, t.V4
}

type Tuple5[T1, T2, T3, T4, T5 any] struct {
	V1 T1
	V2 T2
	V3 T3
	V4 T4
	V5 T5
}

func (t Tuple5[T1, T2, T3, T4, T5]) Unpack() (T1, T2, T3, T4, T5) {
	return t.V1, t.V2, t.V3, t.V4, t.V5
}

type Tuple6[T1, T2, T3, T4, T5, T6 any] struct {
	V1 T1
	V2 T2
	V3 T3
	V4 T4
	V5 T5
	V6 T6
}

func (t Tuple6[T1, T2, T3, T4, T5, T6]) Unpack() (T1, T2, T3, T4, T5, T6) {
	return t.V1, t.V2, t.V3, t.V4, t.V5, t.V6
}

type Tuple7[T1, T2, T3, T4, T5, T6, T7 any] struct {
	V1 T1
	V2 T2
	V3 T3
	V4 T4
	V5 T5
	V6 T6
	V7 T7
}

func (t Tuple7[T1, T2, T3, T4, T5, T6, T7]) Unpack() (T1, T2, T3, T4, T5, T6, T7) {
	return t.V1, t.V2, t.V3, t.V4, t.V5, t.V6, t.V7
}

type Tuple8[T1, T2, T3, T4, T5, T6, T7, T8 any] struct {
	V1 T1
	V2 T2
	V3 T3
	V4 T4
	V5 T5
	V6 T6
	V7 T7
	V8 T8
}

func (t Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]) Unpack() (T1, T2, T3, T4, T5, T6, T7, T8) {
	return t.V1, t.V2, t.V3, t.V4, t.V5, t.V6, t.V7, t.V8
}

type Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any] struct {
	V1 T1
	V2 T2
	V3 T3
	V4 T4
	V5 T5
	V6 T6
	V7 T7
	V8 T8
	V9 T9
}

func (t Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]) Unpack() (T1, T2, T3, T4, T5, T6, T7, T8, T9) {
	return t.V1, t.V2, t.V3, t.V4, t.V5, t.V6, t.V7, t.V8, t.V9
}
